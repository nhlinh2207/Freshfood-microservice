
server:
  port: 9090

spring:
  application:
    name: API-GATEWAY
  config:
    import: configserver:${CONFIG_SERVER_URL:http://localhost:9296} # Ket noi Config Server
  cloud:
    gateway:
      default-filters:
        - TokenRelay=    # Pass Token from Gateway to downstream Service
      routes:
        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE    #lb is load balance
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDER-SERVICE
                fallbackuri: forward:/oderServiceFallBack
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 1

        - id: PAYMENT-SERVICE
          uri: lb://PAYMENT-SERVICE    #lb is load balance
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENT-SERVICE
                fallbackuri: forward:/paymentServiceFallBack
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 1

        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE    #lb is load balance
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallbackuri: forward:/productServiceFallBack
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 1

        - id: USER-SERVICE
          uri: lb://USER-SERVICE    #lb is load balance
          predicates:
            - Path=/user/**
          filters:
            - name: CircuitBreaker
              args:
                name: USER-SERVICE
                fallbackuri: forward:/userServiceFallBack
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 1

  #  redis:
#    host: 192.168.25.128
#    port: 6379

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${KEYCLOAK_REAML_URL:http://192.168.25.131:8080/realms/Micro-Realm}/protocol/openid-connect/certs
      client:
        provider:
          my-keycloak-provider:
            issuer-uri: ${KEYCLOAK_REAML_URL:http://192.168.25.131:8080/realms/Micro-Realm}
        registration:
          gateway:
            provider: my-keycloak-provider
            client-id: ${KEYCLOAK_CLIENT_ID:Micro-Client-Id}
            client-secret: ${KEYCLOAK_CLIENT_SECRET:2eeJe1p3tOHpW2UOr6hVdzeciR7VEEKm}
            authorization-grant-type: authorization_code
            redirect-uri: ${KEYCLOAK_REDIRECT_URL:http://localhost:9090/login/oauth2/code/gateway}
            scope: openid  # Prevent invalid credential error